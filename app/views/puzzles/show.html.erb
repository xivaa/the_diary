<div class="container-puzzle-show">
  <div class="puzzle-show-img">
    <% if @puzzle.goals.size == 1 %>
      <%= render "puzzle1" %>
    <% elsif @puzzle.goals.size == 2 %>
      <%= render "puzzle2" %>
    <% elsif @puzzle.goals.size == 3 %>
      <%= render "puzzle3" %>
    <% elsif @puzzle.goals.size == 4 %>
      <%= render "puzzle4" %>
    <% elsif @puzzle.goals.size == 5 %>
      <%= render "puzzle5" %>
    <% else %>
      <%= "No goals today" %>
    <% end %>
  </div>
</div>

  <div class="puzzle-show-goals">
  <% @puzzle.goals.each do |g| %>
    <h3 class="ms-4 pt-2"><%= g.name %></h3>
    <% g.habits.each do |h| %>
      <%= render "habits/habits_puzzle_show", h: h %>
    <% end %>
  <% end %>
  </div>

<%# <script>
$(".puzzles.show").ready(function() {
  // on page load, trigger init function
  window.onload = function() {
    init();
  };

  var difficulty = window.level;
  var hover = '#006699';
  var puzzleCanvas;
  var stage;
  var puzzleImage;
  var pieces;
  var puzzleWidth;
  var puzzleHeight;
  var pieceWidth;
  var pieceHeight;

  function getOffset(element, ancestor) {
    var left = 0,
        top = 0;
    while (element != ancestor) {
      left += element.offsetLeft;
      top += element.offsetTop;
      element = element.parentNode;
    }
    return { left: left, top: top };
  }

  function getMousePosition (event) {
    event = event || window.event;
    if (event.pageX) {
      return { x: event.pageX, y: event.pageY };
    }
    return {
      x: event.clientX + document.body.scrollLeft +
          document.documentElement.scrollLeft,
      y: event.clientY + document.body.scrollTop +
          document.documentElement.scrollTop
    };
  }
  // init function, loads image
  function init(){
      puzzleImage = new Image();
      puzzleImage.addEventListener('load', onImage, false);
      puzzleImage.src = window.mapImg;
      // make puzzle width work properly for smaller devices
      if (puzzleImage.width > window.innerWidth) {
        puzzleImage.width = window.innerWidth;
      }
  }
  // sets puzzle piece sizes based on difficulty
  function onImage(e){
      pieceWidth = Math.floor(puzzleImage.width / difficulty)
      pieceHeight = Math.floor(puzzleImage.height / difficulty)
      puzzleWidth = pieceWidth * difficulty;
      puzzleHeight = pieceHeight * difficulty;
      setCanvas();
      initPuzzle();
  }

  // sets canvas for script
  function setCanvas(){
      puzzleCanvas = document.getElementById('canvas');
      stage = puzzleCanvas.getContext('2d');
      puzzleCanvas.width = puzzleWidth;
      puzzleCanvas.height = puzzleHeight;
      puzzleCanvas.offset = getOffset(puzzleCanvas, document.body);
  }
  // draws image on canvas
  function initPuzzle(){
      winning.innerHTML = '';
      pieces = [];
      playerMouse = {x:0,y:0};
      currentPiece = null;
      currentDropPiece = null;
      stage.drawImage(puzzleImage, 0, 0, puzzleWidth, puzzleHeight, 0, 0, puzzleWidth, puzzleHeight);
      buildPieces();
  }
  // builds pieces for puzzle
  function buildPieces(){
      var i;
      var piece;
      var xPos = 0;
      var yPos = 0;
      for(i = 0;i < difficulty * difficulty;i++){
          piece = {};
          piece.sx = xPos;
          piece.sy = yPos;
          pieces.push(piece);
          xPos += pieceWidth;
          if(xPos >= puzzleWidth){
              xPos = 0;
              yPos += pieceHeight;
          }
      }
  }</script> %>
